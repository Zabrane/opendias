Copying pre defined environment
Copying default database
STARTING app...
Now ready
No need for a web client for this test.
Sending request = 
no post data = $VAR1 = '';

Sending request = action=rumplestilskin
Unknown action = $VAR1 = '';

Sending request = action=deleteDoc
deleteDoc = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=doScan
doScan = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=docFilter
docFilter = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=getDocDetail
getDocDetail = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=getScannerList
getScannerList = $VAR1 = {
  'ScannerList' => {
    'Devices' => {
      'Device' => {
        'Formats' => {
          'format' => 'Grey Scale'
        },
        'default' => '300',
        'host' => 'opendias server',
        'max' => '800',
        'min' => '50',
        'model' => 'Frontend-tester',
        'name' => 'test:0',
        'type' => 'Virtual Device',
        'vendor' => 'Noname'
      }
    }
  }
};

Sending request = action=getScanningProgress
getScanningProgress = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=moveTag
moveTag = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=nextPageReady
nextPageReady = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=tagsAutoComplete
tagsAutoComplete = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=titleAutoComplete
titleAutoComplete = $VAR1 = '{"results":[]}';

Sending request = action=updateDocDetails
updateDocDetails = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=docFilter&subaction=rumplestilskin
Unknown subaction on action of docFilter = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=moveTag&subaction=rumplestilskin
Unknown subaction on action of moveTag = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=docFilter&subaction=count
actions of docFilter / count = $VAR1 = {
  'DocFilter' => {
    'Results' => {},
    'count' => '0'
  }
};

Sending request = action=docFilter&subaction=fullList
actions of docFilter / fullList = $VAR1 = {
  'DocFilter' => {
    'Results' => {},
    'count' => '0'
  }
};

Sending request = action=moveTag&subaction=addDoc
actions of moveTag / addDoc = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=moveTag&subaction=addTag
actions of moveTag / addTag = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=moveTag&subaction=removeDoc
actions of moveTag / removeDoc = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Sending request = action=moveTag&subaction=removeTag
actions of moveTag / removeTag = $VAR1 = {
  'error' => 'Your request could not be processed'
};

Stopping service
Waiting for valgrind to finish.
