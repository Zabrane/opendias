

2. How are the tests constructed.
---------------------------------
The tests are generally categorised into three areas.

 * Test Coverage - ensure the tests are exhaustive.
 * Memory Management - ensure all code handles its memory correctly.
 * GUI Excersise - make the app does all it can

2.1. Test Coverage.
-------------------
To ensure all areas of code are tested, all tests should be run while the application is compiled in "--coverage" mode. The test coverage can then be analysted after each test run with lcov and genhtml.

2.2. Memory Management.
-----------------------
To ensure that memory is being managed correctly, each test case should be run ontop of valgrind. Valgrind will then produce a report of all memory and program logical errors.

2.3. GUI Excersise.
-------------------
The HtmlUnit (java) project is used to write scripts that interface to the application (via the perl test script).

2.4. Best Practice.
-------------------
To check the code base does not include common errors:
  cppcheck --verbose --enable=all src/
  splint -posix-lib -DHAVE_CONFIG_H -I. -I..  -DPACKAGE_LOCALE_DIR=\""/usr/local//locale"\" -DPACKAGE_SRC_DIR=\""."\" -DPACKAGE_DATA_DIR=\""/usr/local/share"\" -I/usr/include/uuid -I/usr/include/libxml2 -D__USE_XOPEN2K8=1 -D__builtin_va_list=va_list -weak src/*.c

3. Getting the testing environment working
------------------------------------------
You will need to install Java and the Perl JUnit wrapper

# run me with root privs
apt-get install default-jdk
JAVA_HOME=/usr/lib/jvm/default-java cpan -f Inline::Java
cpan -f WWW::HtmlUnit




4. How to run the tests (automated).
-------------------------------------
cd test
./setupRun.sh
view './index.html' for the test results
